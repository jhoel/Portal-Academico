<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

  <mvc:annotation-driven />

  <mvc:resources mapping="static/**" location="file:./src/main/resources/static/,classpath:/static/" />

  <mvc:default-servlet-handler />

  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <bean class="is2.controller.AuthenticationInterceptor" />
    </mvc:interceptor>
  </mvc:interceptors>

  <context:component-scan base-package="is2.controller" />

  <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="mediaTypes">
      <map>
        <entry key="json" value="application/json" />
      </map>
    </property>
  </bean>

  <!-- This bean sets up the Velocity environment for us based on a root path for templates. Optionally, 
    a properties file can be specified for more control over the Velocity environment, but the defaults are 
    pretty sane for file based template loading. -->
  <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
  </bean>
  <!-- View resolvers can also be configured with ResourceBundles or XML files. If you need different 
    view resolving based on Locale, you have to use the resource bundle resolver. -->
  <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
    <property name="order" value="0" />
    <property name="cache" value="true" />
    <property name="prefix" value="" />
    <property name="suffix" value=".vm" />
    <property name="exposeSessionAttributes" value="true" />
  </bean>
</beans>
